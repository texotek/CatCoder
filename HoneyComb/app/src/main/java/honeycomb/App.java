/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package honeycomb;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Scanner;

public class App {
    public final static String level = "level4";
    public static void main(String[] args) throws URISyntaxException, IOException {
        File[] files = new File(App.class.getResource("/" + level).toURI()).listFiles();

        for (File file : files) {
            if(file.getName().contains(".out")) continue;
            //if(!file.getName().contains("level3_3.in")) continue;
            System.out.println(file.getName() + "\n");
            try (Scanner s = new Scanner(new FileReader(file))) {
                int honeyCombCount = Integer.parseInt(s.nextLine());
                ArrayList<HoneyComb> honeyCombs = new ArrayList<>(honeyCombCount);
                HoneyComb comb = new HoneyComb();
                s.nextLine();
                while(s.hasNextLine()) {
                    String line = s.nextLine();
                    if(line.isEmpty()) {
                        honeyCombs.add(comb);
                        comb = new HoneyComb();
                        continue;
                    }
                    comb.field.add(line);
                }
                honeyCombs.add(comb);
                File out = new File(file.getPath().replace(".in", ".out"));
                try(BufferedWriter writer = new BufferedWriter(new FileWriter(out))) {
                    int count = 1;
                    for (HoneyComb co : honeyCombs) {
                        System.out.println(count);
                        if(co.canWaspEscapeLinear()) writer.write("FREE");
                        else writer.write("TRAPPED");
                        writer.newLine();
                        count++;
                    }

                }
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }
    }
}
